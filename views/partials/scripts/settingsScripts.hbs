<script>
      const serverForm = document.getElementById('serverForm');
      serverForm.addEventListener('submit', async (e) => {
          e.preventDefault();

          const formData = new FormData(serverForm);
          const data = {
              server_name: formData.get('server_name'),
              server_host: formData.get('server_host'),
              server_port: formData.get('server_port'),
              server_username: formData.get('server_username'),
              server_password: formData.get('server_pass'),
              server_from_email: formData.get('server_from_email')
          };

          try {
              const response = await fetch('/api/servers/create', {
                  method: 'POST',
                  headers: {
                      'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(data)
              });

              const result = await response.json();
              if (result.hasError) {
                  Swal.fire({
                      title: 'Error!',
                      text: result.errorData,
                      icon: 'error'
                  });
              } else {
                  Swal.fire({
                      title: 'Success!',
                      text: result.message,
                      icon: 'success'
                  });
              }
          } catch (error) {
              Swal.fire({
                  title: 'Error!',
                  text: 'An error occurred while creating the server.',
                  icon: 'error'
              });
          }
      });
  </script>
    <script>
      const templateForm = document.getElementById('templateForm');
      templateForm.addEventListener('submit', async (e) => {
          e.preventDefault();

          const formData = new FormData(templateForm);
          const data = {
              template_name: formData.get('template_name'),
              template_subject: formData.get('template_subject'),
              template_content: formData.get('template_content'),
              is_html: document.getElementById('is_html').checked, 

          };

          try {
              const response = await fetch('/api/templates/create', {
                  method: 'POST',
                  headers: {
                      'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(data)
              });

              const result = await response.json();
              if (result.hasError) {
                  Swal.fire({
                      title: 'Error!',
                      text: result.errorData,
                      icon: 'error'
                  });
              } else {
                  Swal.fire({
                      title: 'Success!',
                      text: result.message,
                      icon: 'success'
                  });
              }
          } catch (error) {
              Swal.fire({
                  title: 'Error!',
                  text: 'An error occurred while creating the server.',
                  icon: 'error'
              });
          }
      });
  </script>
  <script>
      document.addEventListener('DOMContentLoaded', () => {
          const deleteButtons = document.querySelectorAll('.deleteBtn');

          deleteButtons.forEach(button => {
              button.addEventListener('click', async (e) => {
                  const serverId = e.target.getAttribute('data-server-id');

                  const confirm = await Swal.fire({
                      title: 'Are you sure?',
                      text: "You won't be able to revert this!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33',
                      confirmButtonText: 'Yes, delete it!'
                  });

                  if (confirm.isConfirmed) {
                      try {
                          const response = await fetch('/api/servers/delete', {
                              method: 'DELETE',
                              headers: {
                                  'Content-Type': 'application/json'
                              },
                              body: JSON.stringify({
                                  server_id: serverId
                              })
                          });

                          const result = await response.json();
                          if (result.hasError) {
                              Swal.fire({
                                  title: 'Error!',
                                  text: result.errorData,
                                  icon: 'error'
                              });
                          } else {
                              Swal.fire({
                                  title: 'Deleted!',
                                  text: result.message,
                                  icon: 'success'
                              });
                              e.target.closest('tr').remove();
                          }
                      } catch (error) {
                          Swal.fire({
                              title: 'Error!',
                              text: 'An error occurred while deleting the server.',
                              icon: 'error'
                          });
                      }
                  }
              });
          });
      });
  </script>
  <script>
      document.addEventListener('DOMContentLoaded', () => {
          const deleteButtons = document.querySelectorAll('.deleteBtn-template');

          deleteButtons.forEach(button => {
              button.addEventListener('click', async (e) => {
                  const templateId = e.target.getAttribute('data-template-id');

                  const confirm = await Swal.fire({
                      title: 'Are you sure?',
                      text: "You won't be able to revert this!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33',
                      confirmButtonText: 'Yes, delete it!'
                  });

                  if (confirm.isConfirmed) {
                      try {
                          const response = await fetch('/api/templates/delete', {
                              method: 'DELETE',
                              headers: {
                                  'Content-Type': 'application/json'
                              },
                              body: JSON.stringify({
                                  template_id: templateId,
                              })
                          });

                          const result = await response.json();
                          if (result.hasError) {
                              Swal.fire({
                                  title: 'Error!',
                                  text: result.errorData,
                                  icon: 'error'
                              });
                          } else {
                              Swal.fire({
                                  title: 'Deleted!',
                                  text: result.message,
                                  icon: 'success'
                              });
                              e.target.closest('tr').remove();
                          }
                      } catch (error) {
                          Swal.fire({
                              title: 'Error!',
                              text: 'An error occurred while deleting the template.',
                              icon: 'error'
                          });
                      }
                  }
              });
          });
      });
  </script>